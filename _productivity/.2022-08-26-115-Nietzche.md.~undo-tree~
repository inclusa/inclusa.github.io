(undo-tree-save-format-version . 1)
"3718b90ba16547142dc5ebee4ce60e7afac37206"
[nil nil nil nil (25352 35567 81754 619000) 0 nil]
([nil nil ((366 . 367) (345 . 366) (330 . 345) (#("L" 0 1 (font-lock-multiline t markdown-list-item ((312 331 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 331 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -330) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("a" 0 1 (font-lock-multiline t markdown-list-item ((312 332 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 332 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -331) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#(" " 0 1 (font-lock-multiline t markdown-list-item ((312 333 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 333 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -332) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("f" 0 1 (font-lock-multiline t markdown-list-item ((312 334 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 334 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -333) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("e" 0 1 (font-lock-multiline t markdown-list-item ((312 335 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 335 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -334) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("i" 0 1 (font-lock-multiline t markdown-list-item ((312 336 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 336 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -335) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 336 (333 . 336) (#("f" 0 1 (font-lock-multiline t markdown-list-item ((312 334 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 334 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -333) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (328 . 334) (319 . 327) (318 . 320) (#("*" 0 1 (markdown-list-item ((312 319 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 319 0 2 "- " nil (283 285 283 283 283 284 284 285))) font-lock-multiline t fontified nil)) . -318) (318 . 319) (#("A" 0 1 (font-lock-multiline t markdown-list-item ((312 319 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 319 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -318) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("n" 0 1 (font-lock-multiline t markdown-list-item ((312 320 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 320 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -319) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("t" 0 1 (font-lock-multiline t markdown-list-item ((312 321 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 321 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -320) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("r" 0 1 (font-lock-multiline t markdown-list-item ((312 322 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 322 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -321) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("i" 0 1 (font-lock-multiline t markdown-list-item ((312 323 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 323 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -322) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 323 (312 . 323) (#("o" 0 1 (markdown-list-item ((283 313 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -312) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 313 (312 . 313) (311 . 312) (310 . 311) (#("
" 0 1 (font-lock-multiline t fontified t)) . -310) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 311 (310 . 311) (290 . 310) (#("x" 0 1 (font-lock-multiline t markdown-list-item ((283 291 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -290) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("e" 0 1 (font-lock-multiline t markdown-list-item ((283 292 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -291) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("i" 0 1 (font-lock-multiline t markdown-list-item ((283 293 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -292) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#(" " 0 1 (font-lock-multiline t markdown-list-item ((283 294 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -293) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("V" 0 1 (font-lock-multiline t markdown-list-item ((283 295 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -294) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("l" 0 1 (font-lock-multiline t markdown-list-item ((283 296 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -295) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("u" 0 1 (font-lock-multiline t markdown-list-item ((283 297 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -296) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("n" 0 1 (font-lock-multiline t markdown-list-item ((283 298 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -297) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("t" 0 1 (font-lock-multiline t markdown-list-item ((283 299 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -298) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("a" 0 1 (font-lock-multiline t markdown-list-item ((283 300 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -299) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("t" 0 1 (font-lock-multiline t markdown-list-item ((283 301 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -300) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#(" " 0 1 (font-lock-multiline t markdown-list-item ((283 302 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -301) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("d" 0 1 (font-lock-multiline t markdown-list-item ((283 303 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -302) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("e" 0 1 (font-lock-multiline t markdown-list-item ((283 304 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -303) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#(" " 0 1 (font-lock-multiline t markdown-list-item ((283 305 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -304) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("C" 0 1 (font-lock-multiline t markdown-list-item ((283 306 0 2 "- " nil (283 285 283 283 283 284 284 285))) fontified t)) . -305) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 306 (285 . 306) (283 . 285) (282 . 283) (#(" " 0 1 (font-lock-multiline t markdown-list-item ((238 283 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -282) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("A" 0 1 (font-lock-multiline t markdown-list-item ((238 284 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -283) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("n" 0 1 (font-lock-multiline t markdown-list-item ((238 285 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -284) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("h" 0 1 (font-lock-multiline t markdown-list-item ((238 286 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -285) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("e" 0 1 (font-lock-multiline t markdown-list-item ((238 287 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -286) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("l" 0 1 (font-lock-multiline t markdown-list-item ((238 288 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -287) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#(" " 0 1 (font-lock-multiline t markdown-list-item ((238 289 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -288) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("d" 0 1 (font-lock-multiline t markdown-list-item ((238 290 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -289) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("e" 0 1 (font-lock-multiline t markdown-list-item ((238 291 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -290) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("l" 0 1 (font-lock-multiline t markdown-list-item ((238 292 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -291) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#(" " 0 1 (font-lock-multiline t markdown-list-item ((238 293 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -292) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 293 (284 . 293) (265 . 284) (#("l" 0 1 (font-lock-multiline t markdown-list-item ((238 266 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -265) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("o" 0 1 (font-lock-multiline t markdown-list-item ((238 267 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -266) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) 267 (266 . 267) (#("o" 0 1 (font-lock-multiline t markdown-list-item ((238 267 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -266) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("u" 0 1 (font-lock-multiline t markdown-list-item ((238 268 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -267) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("t" 0 1 (font-lock-multiline t markdown-list-item ((238 269 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -268) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) 269 (264 . 269) (#("l" 0 1 (font-lock-multiline t markdown-list-item ((238 265 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -264) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 265 (263 . 265) (#(" " 0 1 (font-lock-multiline t markdown-list-item ((238 264 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -263) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("o" 0 1 (font-lock-multiline t markdown-list-item ((238 265 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -264) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) 265 (264 . 265) (251 . 264) (#(":" 0 1 (font-lock-multiline t markdown-list-item ((238 252 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -251) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#(" " 0 1 (font-lock-multiline t markdown-list-item ((238 253 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -252) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) 253 (#("pesime. " 0 4 (markdown-list-item ((238 261 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 4 5 (markdown-list-item ((238 261 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 5 6 (markdown-list-item ((238 261 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 6 7 (markdown-list-item ((238 261 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 7 8 (font-lock-multiline t markdown-list-item ((238 261 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -253) (undo-tree-id163 . -8) (undo-tree-id164 . -8) (undo-tree-id165 . -8) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -5) 261 (#("Voluntat " 0 1 (markdown-list-item ((238 270 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 1 2 (markdown-list-item ((238 270 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 2 3 (markdown-list-item ((238 270 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 3 4 (markdown-list-item ((238 270 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 4 5 (markdown-list-item ((238 270 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 5 6 (markdown-list-item ((238 270 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 6 7 (markdown-list-item ((238 270 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 7 8 (markdown-list-item ((238 270 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 8 9 (font-lock-multiline t markdown-list-item ((238 270 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -261) (undo-tree-id171 . -9) (undo-tree-id172 . -9) (undo-tree-id173 . -9) 270 (#("de " 0 1 (markdown-list-item ((238 273 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 1 2 (markdown-list-item ((238 273 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t) 2 3 (font-lock-multiline t markdown-list-item ((238 273 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -270) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) 273 (#("v" 0 1 (font-lock-multiline t markdown-list-item ((238 274 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -273) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) 274 (#("e" 0 1 (font-lock-multiline t markdown-list-item ((238 275 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -274) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#("i" 0 1 (font-lock-multiline t markdown-list-item ((238 276 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -275) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) 276 (259 . 276) (258 . 259) (#("i" 0 1 (font-lock-multiline t markdown-list-item ((238 259 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -258) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("u" 0 1 (font-lock-multiline t markdown-list-item ((238 260 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -259) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("d" 0 1 (font-lock-multiline t markdown-list-item ((238 261 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -260) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#("d" 0 1 (font-lock-multiline t markdown-list-item ((238 262 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -261) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("d" 0 1 (font-lock-multiline t markdown-list-item ((238 263 0 2 "- " nil (238 240 238 238 238 239 239 240))) fontified t)) . -262) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) 263 (260 . 263) (259 . 260) (249 . 259) (245 . 249) (238 . 245) (237 . 238) (223 . 237) (#("." 0 1 (font-lock-multiline t markdown-list-item ((209 224 0 2 "- " nil (209 211 209 209 209 210 210 211))) fontified t)) . -223) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) 224 (218 . 224) (#("f" 0 1 (font-lock-multiline t markdown-list-item ((209 219 0 2 "- " nil (209 211 209 209 209 210 210 211))) fontified t)) . -218) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (211 . 219) (209 . 211) (207 . 209) (204 . 207) (183 . 204) (#("I" 0 1 (fontified t)) . -183) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (#("d" 0 1 (fontified t)) . -184) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("e" 0 1 (fontified t)) . -185) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#("e" 0 1 (fontified t)) . -186) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("s" 0 1 (fontified t)) . -187) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#(" " 0 1 (fontified t)) . -188) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("c" 0 1 (fontified t)) . -189) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#("l" 0 1 (fontified t)) . -190) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (#("a" 0 1 (fontified t)) . -191) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("u" 0 1 (fontified t)) . -192) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#("
" 0 1 (fontified t)) . -193) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) 194 (193 . 194) (183 . 193) (182 . 183) (181 . 182) (t 25352 35346 382011 310000) 181) nil (25352 35567 81672 434000) 0 nil])
([nil nil ((367 . 368)) nil (25352 35567 80901 751000) 0 nil])
([nil nil ((nil rear-nonsticky nil 224 . 225) (nil fontified nil 182 . 225) (182 . 225) (182 . 183) (#("i" 0 1 (fontified t)) . -182) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) 183 (182 . 183) (499 . 501) (498 . 499) (497 . 498) (476 . 497) (#(" " 0 1 (fontified t markdown-list-item ((454 477 0 2 "- " nil (454 456 454 454 454 455 455 456)) (283 367 0 2 "- " nil (283 285 283 283 283 284 284 285))) face (markdown-line-break-face))) . -476) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("i" 0 1 (fontified t markdown-list-item ((454 478 0 2 "- " nil (454 456 454 454 454 455 455 456)) (283 367 0 2 "- " nil (283 285 283 283 283 284 284 285))))) . -477) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 478 (473 . 478) (454 . 473) (#("
" 0 1 (fontified t)) . -454) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 455 (453 . 455) (434 . 453) (#(" " 0 1 (fontified t markdown-list-item ((368 435 0 2 "- " nil (368 370 368 368 368 369 369 370)) (283 367 0 2 "- " nil (283 285 283 283 283 284 284 285))))) . -434) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("U" 0 1 (fontified t markdown-list-item ((368 436 0 2 "- " nil (368 370 368 368 368 369 369 370)) (283 367 0 2 "- " nil (283 285 283 283 283 284 284 285))))) . -435) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("U" 0 1 (fontified t markdown-list-item ((368 437 0 2 "- " nil (368 370 368 368 368 369 369 370)) (283 367 0 2 "- " nil (283 285 283 283 283 284 284 285))))) . -436) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 437 (427 . 437) (416 . 427) (#("a" 0 1 (fontified t markdown-list-item ((368 417 0 2 "- " nil (368 370 368 368 368 369 369 370)) (283 367 0 2 "- " nil (283 285 283 283 283 284 284 285))))) . -416) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#(" " 0 1 (fontified t markdown-list-item ((368 418 0 2 "- " nil (368 370 368 368 368 369 369 370)) (283 367 0 2 "- " nil (283 285 283 283 283 284 284 285))))) . -417) (undo-tree-id162 . -1) (undo-tree-id163 . -1) 418 (410 . 418) (389 . 410) (383 . 389) (#("f" 0 1 (fontified t markdown-list-item ((368 384 0 2 "- " nil (368 370 368 368 368 369 369 370)) (283 367 0 2 "- " nil (283 285 283 283 283 284 284 285))))) . -383) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (368 . 384) (#("    " 0 4 (fontified t)) . -368) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) 372 (#("-" 0 1 (fontified t markdown-list-item ((312 373 4 6 "- " nil (312 318 312 316 316 317 317 318)) (283 373 0 2 "- " nil (283 285 283 283 283 284 284 285))))) . -372) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#(" " 0 1 (fontified t markdown-list-item ((368 374 4 6 "- " nil (368 374 368 372 372 373 373 374)) (283 374 0 2 "- " nil (283 285 283 283 283 284 284 285))))) . -373) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 374 (372 . 374) (367 . 372) (t 25352 35567 136069 87000) 366) nil (25352 35924 281746 717000) 0 nil])
([nil nil ((544 . 545) (t 25352 35924 296661 388000)) nil (25352 35968 225861 424000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t markdown-list-item ((543 545 0 2 "- " nil (543 545 543 543 543 544 544 545)) (327 411 0 2 "- " nil (327 329 327 327 327 328 328 329))) face markdown-list-face)) . -543) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#(" " 0 1 (fontified t markdown-list-item ((543 546 0 3 "-  " nil (543 546 543 543 543 544 544 546)) (327 411 0 2 "- " nil (327 329 327 327 327 328 328 329))) face (markdown-line-break-face))) . -544) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 545) nil (25352 35968 225859 213000) 0 nil])
([nil nil ((543 . 551)) nil (25352 35968 225853 549000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t markdown-list-item ((543 550 2 5 "1. " nil (543 548 543 545 545 547 547 548)) (327 411 0 2 "- " nil (327 329 327 327 327 328 328 329))))) . -548) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("e" 0 1 (fontified t markdown-list-item ((543 551 2 5 "1. " nil (543 548 543 545 545 547 547 548)) (327 411 0 2 "- " nil (327 329 327 327 327 328 328 329))))) . -549) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("s" 0 1 (fontified t markdown-list-item ((543 552 2 5 "1. " nil (543 548 543 545 545 547 547 548)) (327 411 0 2 "- " nil (327 329 327 327 327 328 328 329))))) . -550) (undo-tree-id177 . -1) (undo-tree-id178 . -1) 551) nil (25352 35968 225850 446000) 0 nil])
([nil nil ((548 . 549)) nil (25352 35968 225824 995000) 0 nil])
([nil current ((#("f" 0 1 (fontified nil face (markdown-line-break-face) markdown-list-item ((543 557 2 5 "1. " nil (543 548 543 545 545 547 547 548)) (327 411 0 2 "- " nil (327 329 327 327 327 328 328 329))))) . -555) (549 . 556)) nil (25352 35968 225805 536000) 0 nil])
nil
